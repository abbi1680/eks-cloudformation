Description: >
    Martin Ansong / Udactiy 2020 
    This template deploys an Amazon EKS Cluster and Worker nodes 
    Based on https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html
    NodeGroup Security based on https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
  
  EKSARNRole:
    Description: EKS ARN Role
    Type: String
  
  ClusterName:
    Description: Name of EKS Cluster
    Type: String

  NodeAutoScalingGroupDesiredCapacity:
    Type: Number
    Description: Desired capacity of Node Group ASG.

  NodeAutoScalingGroupMinSize:
    Type: Number
    Description: Minimum size of Node Group ASG.

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Description: Maximum size of Node Group ASG. Set to at least 1 greater than NodeAutoScalingGroupDesiredCapacity.

  NodeGroupName:
    Description: Unique identifier for the Node Group.
    Type: String

  NodeInstanceType:
    Description: EC2 instance type for the node instances
    Type: String

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

  NodeVolumeSize:
    Type: Number
    Description: Node volume size

Resources:

  ClusterControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow HTTP to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
  
  KubernetesCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: KubernetesCluster
      ResourcesVpcConfig:
        SecurityGroupIds: 
          - !Ref 'ClusterControlPlaneSecurityGroup'
        SubnetIds:
          - Fn::ImportValue: !Sub ${EnvironmentName}-PRI1-SN
          - Fn::ImportValue: !Sub ${EnvironmentName}-PRI2-SN
      RoleArn: !Sub ${EKSARNRole}

  EKSNodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    DependsOn: EKSNodeInstanceRole
    Properties:
      AmiType: AL2_x86_64
      InstanceTypes:
        - !Ref NodeInstanceType
      ClusterName: !Ref ClusterName
      NodegroupName: !Ref NodeGroupName
      NodeRole: !GetAtt EKSNodeInstanceRole.Arn
      DiskSize: !Ref NodeVolumeSize
      ScalingConfig:
        MinSize: !Ref NodeAutoScalingGroupMinSize
        DesiredSize: !Ref NodeAutoScalingGroupDesiredCapacity
        MaxSize: !Ref NodeAutoScalingGroupMaxSize
      RemoteAccess:
        Ec2SshKey: !Ref KeyName
      Subnets:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PRI1-SN
        - Fn::ImportValue: !Sub ${EnvironmentName}-PRI2-SN

  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the cluster
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID" 
      Tags:
      - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
        Value: 'owned'